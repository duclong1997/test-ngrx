kubernete:
-giúp tạo ra các service quản lý các service có sự liên kết với nhau trên hệ thống ứng dụng micrro service.
việc tạo các service dựa trên các deployment có bao gồm các container (trên docker hug) giúp các container có thể liên kết và tác động đến nhau.
tạo thành 1 mạng lưới. ngoài ra có thể loadbalancer giữa các external service và tạo ra nhiều pod để nếu như 1 pod có gặp vấn đề thì pod khác vẫn
có thể hoạt động thay pod đó. có thể debug và xem logs của các service, pod trên kubectl khi có vấn đề xảy ra với hệ thống.

-get node của kubernete: kubectl get nodes
-check pod: kubectl get pod ( -o wide )
-check service: kubectl get service
để có thể tương tác đến pod cần tạo ra Deployment, nó là tầng trừu tượng
của pod nó là thứ cần được tạo ra

deployment: là nơi dùng để cấu hình 1 container, image sẽ được thực thi trong kubernete

-check các replica: kubectl get replicaset ( dùng để xem các bản sao deployment,
servive được copy khi file config cấu hình)
replica cho phép bạn build nhiều bản container giống hệt nhau để khi 1 container có vấn đề
thì bản kia sẽ được thay thế.

-sửa deployment: kubectl edit deployment name-deployment
-lấy ra deployment: kubectl get deploymnet ( -o wide )
-xoá deployment: kubectl delete deployment name-deployment
-apply file cấu hình để tạo hoặc sửa deployment hoặc service trong kubernete: kubectl apply -f file-name.yaml
-xoá với file cấu hình : kubectl delete -f file-name.yaml


debug:
-view log pod: kubectl logs name-pod

service:
-check các service: kubectl get services
-xem chi tiết service: kubectl describe service name-service

namespace: là khu vục dùng để quản lý các nguồn tài nguyên (deploy, service, pod,...) trong các namespace,
nó giống như một không gian ảo bên trong của kubernete.
namespace default là nơi bạn có thể sử dụng , sửa đổi resources nếu như bạn không tạo thêm newspace

lấy ra toàn bộ cac namespace: kubectl get namespace.
thêm mới namespace: kubectl create namespace name-namespace
hoặc có thể tạo namespace sử dụng config-map

cách sử dụng namespace:
-nếu như bạn có một ứng dụng phức tạp, có nhiều deploy, replicaset,....
-nếu như có nhiều team cùng tạo ra ứng dụng giống nhau trong cùng 1 namespace nhưng chúng khác nhau về config
-chia sẻ tài nguyên như nginx, db, elasticsearch,.. với những deploy khác nhau như staging or deployment
-giớI hạn quyền truy cập, tài nguyên ở trên namespace.

không thể truy cập 1 cách trực tiếp từ namespace này sang namespace khác (cần phải có config map mới có thể thực hiện truy cập được)
có một vài thành phần (components) không thể được tạo trong namespace (ví dụ: volume, node)
-check chi tiết file config map (-o yaml)

ingress:
-được sử dụng để có sự bảo mật trong kết nối với (https)
- giúp cho IP address và port không bị lộ.

check ingress: kubect get ingress

helm:
có cặp tính năng chính
- nó giống như package manager for kubernete. Giúp quản lý những file yml và phân tán chúng ở repository public or private.
nói 1 cách đơn giản là muốn build 1 hộ thống chúng ta cần rất nhiều file yml và chúng ta sẽ package những file đó lại thành package
và đặt chúng ở nơi lưu trữ nào đó,và những người khác cũng có thể sử dụng lại package đó thay vì phải tạo lại từ đầu tất cả.
việc này giúp những người khác tiết kiệm effort.
- là template engine giúp cho việc viết các image, service hay develop trở nên nhanh, và link động, thông qua bản vẻ đã được thiết kế sẵn.
nhờ bản vẻ để có thể tạo ra được các image, service, deployment 1 cách nhanh chóng và tránh được sự sai sót hay thiếu xót.
-cung cấp 1 cách đơn giản để có thể setup replease management.
